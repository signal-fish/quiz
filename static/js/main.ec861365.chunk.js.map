{"version":3,"sources":["context.js","responsive.js","components/SetupForm/index.jsx","components/Modal/index.jsx","components/Loading/index.jsx","App.jsx","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsModalOpen","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","mobile","props","css","tablet","laptop","laptopPro","Container","styled","div","width","boxShadow","Wrapper","Title","h1","FormControl","Label","label","Input","input","Select","select","Option","option","Button","button","Error","h2","SetupForm","htmlFor","type","min","max","onChange","onClick","height","Text","p","Modal","toFixed","Spinner","Spin","keyframes","Top","Bottom","Loading","AnsweringPage","padding","Correct","textAlign","Question","fontSize","Answers","Answer","NextQuestionWrapper","justifyContent","NextQuestion","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","map","answer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec861365.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n};\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      } else {\n        return index;\n      }\n    });\n  };\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`;\n    fetchQuestions(url);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        loading,\n        questions,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        quiz,\n        handleChange,\n        handleSubmit,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };","import { css } from \"styled-components\";\n\nexport const mobile = (props) => {\n  return css`\n    @media only screen and (max-width: 576px) {\n      ${props}\n    }\n  `;\n};\n\nexport const tablet = (props) => {\n  return css`\n    @media only screen and (max-width: 768px) {\n      ${props}\n    }\n  `;\n};\n\nexport const tabletPro = (props) => {\n  return css`\n    @media only screen and (max-width: 1024px) {\n      ${props}\n    }\n  `;\n};\n\nexport const laptop = (props) => {\n  return css`\n    @media only screen and (max-width: 1200px) {\n      ${props}\n    }\n  `;\n};\n\nexport const laptopPro = (props) => {\n  return css`\n    @media only screen and (max-width: 1440px) {\n      ${props}\n    }\n  `;\n};\n","import styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context\";\nimport { mobile, tablet, tabletPro, laptop, laptopPro } from \"../../responsive\";\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Setup Quiz</Title>\n        <FormControl>\n          <Label htmlFor=\"amount\">number of questions</Label>\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            min={1}\n            max={50}\n            value={quiz.amount}\n            onChange={handleChange}\n          ></Input>\n        </FormControl>\n        <FormControl>\n          <Label htmlFor=\"category\">category</Label>\n          <Select name=\"category\" value={quiz.category} onChange={handleChange}>\n            <Option value=\"sports\">sports</Option>\n            <Option value=\"history\">history</Option>\n            <Option value=\"politics\">politics</Option>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Label htmlFor=\"difficulty\">category</Label>\n          <Select\n            name=\"difficulty\"\n            value={quiz.difficulty}\n            onChange={handleChange}\n          >\n            <Option value=\"easy\">easy</Option>\n            <Option value=\"medium\">medium</Option>\n            <Option value=\"hard\">hard</Option>\n          </Select>\n        </FormControl>\n        {error && (\n          <Container>\n            <Error>\n              can't generate questions, please try different options\n            </Error>\n          </Container>\n        )}\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Start\n        </Button>\n      </Wrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 40%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);\n\n  ${laptopPro({\n    width: \"50%\",\n  })}\n\n  ${tablet({\n    width: \"65%\",\n  })}\n\n  ${mobile({\n    width: \"100%\",\n    boxShadow: \"none\"\n  })}\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h1`\n  font-size: 30px;\n  text-align: center;\n`;\n\nconst FormControl = styled.div`\nwidth: 90%;\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 40px;\n`;\n\nconst Label = styled.label`\nwidth: 100%;\nfont-size: 23px;\nmargin-bottom: 10px;\ntext-transform: capitalize;\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 10px);\n  height: 30px;\n  border: none;\n  background: lightgray;\n  border-radius: 3px;\n  padding: 0 5px;\n`;\n\nconst Select = styled.select`\nwidth: 100%;\n  background: lightgray;\n  border-radius: 3px;\n  height: 30px;\n`;\n\nconst Option = styled.option``\n\nconst Button = styled.button`\nwidth: 90%;\nborder: none;\nborder-radius: 3px;\nheight: 30px;\nmargin-top: 20px;\nfont-size: 20px;\nbackground: lightblue;\ncursor: pointer;\ntransition: .3s;\n&:hover {\n  opacity: .8;\n  color: rgba(0, 0, 0, .6)\n}\n`\n\nconst Error = styled.h2`\ncolor: red;\n`\n\nexport default SetupForm;\n","import styled from \"styled-components\";\nimport { useGlobalContext } from \"../../context\";\nimport { mobile} from \"../../responsive\";\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n\n  return (\n    <Container isModalOpen={isModalOpen}>\n      <Wrapper>\n        <Title>Congrats!</Title>\n        <Text>\n          You answered {((correct / questions.length) * 100).toFixed(0)}% of\n          questions correctly\n        </Text>\n        <Button onClick={closeModal}>Play Again</Button>\n      </Wrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);\n  background: rgba(0, 0, 0, 0.75);\n  width: 100%;\n  height: 100%;\n  transition: 0.6s;\n  opacity: ${(props) => (props.isModalOpen ? \"1\" : \"0\")};\n  z-index: ${(props) => (props.isModalOpen ? \"999\" : \"-1\")};\n`;\n\nconst Wrapper = styled.div`\n  width: 500px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #fff;\n  padding: 0 10px 30px 10px;\n\n  ${mobile({\n    width: \"80%\",\n    height: \"auto\"\n  })}\n`;\n\nconst Title = styled.h1`\n  margin: 20px 0 5px 0;\n  font-size: 30px;\n  letter-spacing: 2px;\n`;\n\nconst Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nconst Button = styled.button`\n  width: 200px;\n  height: 40px;\n  border: none;\n  border-radius: 3px;\n  background: lightblue;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nexport default Modal;\n","import styled, { keyframes } from \"styled-components\";\n\nconst Loading = () => {\n  return (\n    <Container>\n      <Spinner>\n        <Top></Top>\n        <Bottom></Bottom>\n        <Text>Loading...</Text>\n      </Spinner>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Spinner = styled.div`\n  width: 90px;\n  height: 90px;\n  position: relative;\n`;\n\nconst Spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n    border-width: 6px;\n  }\n  50% {\n    transform: rotate(18deg);\n    border-width: 1px;\n  }\n  100% {\n    transform: rotate(360deg);\n    border-width: 6px;\n  }\n`;\n\nconst Top = styled.div`\n  box-sizing: border-box;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 6px solid transparent;\n  border-top-color: lightblue;\n  border-radius: 50%;\n  animation: ${Spin} 1.5s linear infinite;\n`;\n\nconst Bottom = styled(Top)`\n  border: 6px solid transparent;\n  border-bottom-color: lightgreen;\n`;\n\nconst Text = styled.p`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  font-size: 10px;\n  margin: 0;\n  padding: 0;\n  left: 11px;\n  top: 36px;\n  color: #61c1fc;\n  font-weight: 600;\n`;\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport SetupForm from \"./components/SetupForm\";\nimport Modal from \"./components/Modal\";\nimport Loading from \"./components/Loading\";\nimport { useGlobalContext } from \"./context\";\nimport { mobile, tablet, laptop, laptopPro } from \"./responsive\";\n\nconst App = () => {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n\n  if (waiting) {\n    return (\n      <Container>\n        <SetupForm />\n      </Container>\n    );\n  }\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const { question, incorrect_answers, correct_answer } = questions[index];\n  let answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return (\n    <Container>\n      <Modal></Modal>\n      <AnsweringPage>\n        <Correct>\n          correct answers: {correct} / {index}{\" \"}\n        </Correct>\n        <Question>{question}</Question>\n        <Answers>\n          {answers.map((answer, index) => {\n            return (\n              <Answer\n                key={index}\n                onClick={() => checkAnswer(correct_answer === answer)}\n              >\n                {answer}\n              </Answer>\n            );\n          })}\n        </Answers>\n        <NextQuestionWrapper>\n          <NextQuestion onClick={nextQuestion}>Next Question</NextQuestion>\n        </NextQuestionWrapper>\n      </AnsweringPage>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst AnsweringPage = styled.div`\n  width: 50%;\n  height: auto;\n  padding: 0 50px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n\n  ${laptopPro({\n    width: \"60%\",\n  })}\n\n  ${laptop({\n    width: \"70%\",\n  })}\n\n  ${tablet({\n    width: \"80%\",\n  })}\n\n  ${mobile({\n    width: \"100%\",\n    padding: \"0 20px\",\n    boxShadow: \"none\"\n  })}\n`;\n\nconst Correct = styled.p`\n  font-size: 20px;\n  text-align: right;\n  text-transform: capitalize;\n  color: green;\n\n  ${mobile({\n    textAlign: \"center\"\n  })}\n`;\n\nconst Question = styled.h1`\n  font-size: 40px;\n\n  ${mobile({\n    fontSize: \"25px\",\n  })}\n`;\n\nconst Answers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Answer = styled.button`\n  width: 50%;\n  height: 35px;\n  margin: 10px 0;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s;\n  background: lightskyblue;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  ${laptop({\n    width: \"70%\",\n  })}\n\n  ${tablet({\n    width: \"80%\",\n  })}\n`;\n\nconst NextQuestionWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  ${mobile({\n    justifyContent: \"center\"\n  })}\n`;\n\nconst NextQuestion = styled.button`\n  width: 20%;\n  height: 45px;\n  margin: 10px 0 20px 0;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s;\n  background: lightskyblue;\n  font-size: 20px;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  ${laptop({\n    width: \"25%\",\n  })}\n\n  ${tablet({\n    width: \"30%\",\n  })}\n\n  ${mobile({\n    fontSize: \"16px\",\n    width: \"60%\",\n  })}\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}